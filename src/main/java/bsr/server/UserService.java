
package bsr.server;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserService", targetNamespace = "http://server.bsr/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserService {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "getUser", targetNamespace = "http://server.bsr/", className = "bsr.server.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://server.bsr/", className = "bsr.server.GetUserResponse")
    @Action(input = "http://server.bsr/UserService/getUserRequest", output = "http://server.bsr/UserService/getUserResponse")
    public void getUser();

    /**
     * 
     * @param password
     * @param clientNumber
     * @return
     *     returns int
     * @throws ServerException_Exception
     * @throws NotValidException_Exception
     * @throws AuthException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://server.bsr/", className = "bsr.server.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://server.bsr/", className = "bsr.server.LoginResponse")
    @Action(input = "http://server.bsr/UserService/loginRequest", output = "http://server.bsr/UserService/loginResponse", fault = {
        @FaultAction(className = AuthException_Exception.class, value = "http://server.bsr/UserService/login/Fault/AuthException"),
        @FaultAction(className = NotValidException_Exception.class, value = "http://server.bsr/UserService/login/Fault/NotValidException"),
        @FaultAction(className = ServerException_Exception.class, value = "http://server.bsr/UserService/login/Fault/ServerException")
    })
    public int login(
        @WebParam(name = "clientNumber", targetNamespace = "")
        String clientNumber,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws AuthException_Exception, NotValidException_Exception, ServerException_Exception
    ;

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "getAllUsers", targetNamespace = "http://server.bsr/", className = "bsr.server.GetAllUsers")
    @ResponseWrapper(localName = "getAllUsersResponse", targetNamespace = "http://server.bsr/", className = "bsr.server.GetAllUsersResponse")
    @Action(input = "http://server.bsr/UserService/getAllUsersRequest", output = "http://server.bsr/UserService/getAllUsersResponse")
    public void getAllUsers();

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "createUser", targetNamespace = "http://server.bsr/", className = "bsr.server.CreateUser")
    @ResponseWrapper(localName = "createUserResponse", targetNamespace = "http://server.bsr/", className = "bsr.server.CreateUserResponse")
    @Action(input = "http://server.bsr/UserService/createUserRequest", output = "http://server.bsr/UserService/createUserResponse")
    public void createUser();

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://server.bsr/", className = "bsr.server.UpdateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://server.bsr/", className = "bsr.server.UpdateUserResponse")
    @Action(input = "http://server.bsr/UserService/updateUserRequest", output = "http://server.bsr/UserService/updateUserResponse")
    public void updateUser();

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://server.bsr/", className = "bsr.server.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://server.bsr/", className = "bsr.server.DeleteUserResponse")
    @Action(input = "http://server.bsr/UserService/deleteUserRequest", output = "http://server.bsr/UserService/deleteUserResponse")
    public void deleteUser();

}
